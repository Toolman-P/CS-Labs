                            | #######################################################################
                            | # Test for copying block of size 63;
                            | #######################################################################
0x000:                      | 	.pos 0
0x000: 30f48805000000000000 | main:	irmovq Stack, %rsp  	# Set up stack pointer
                            | 
                            | 	# Set up arguments for copy function and then invoke it
0x00a: 30f23f00000000000000 | 	irmovq $63, %rdx		# src and dst have 63 elements
0x014: 30f60803000000000000 | 	irmovq dest, %rsi	# dst array
0x01e: 30f70001000000000000 | 	irmovq src, %rdi	# src array
0x028: 803200000000000000   | 	call ncopy		 
0x031: 00                   | 	halt			# should halt with num nonzeros in %rax
0x032:                      | StartFun:
                            | #/* $begin ncopy-ys */
                            | ##################################################################
                            | # ncopy.ys - Copy a src block of len words to dst.
                            | # Return the number of positive words (>0) contained in src.
                            | #
                            | # Include your name and ID here.
                            | #
                            | # Describe how and why you modified the baseline code.
                            | #
                            | ##################################################################
                            | # Do not modify this portion
                            | # Function prologue.
                            | # %rdi = src, %rsi = dst, %rdx = len
0x032:                      | ncopy:
                            | 
                            | ##################################################################
                            | # You can modify this portion
                            | 	# Loop header
0x032: 6300                 | 	xorq %rax,%rax		# count = 0;
0x034: 6222                 | 	andq %rdx,%rdx		# len <= 0?
0x036: 71f800000000000000   | 	jle Done		# if so, goto Done:
                            | 
0x03f:                      | Loop:
0x03f: 30f8feffffff00000000 | 	irmovq $0xFFFFFFFE,%r8	
0x049: 50970000000000000000 | 	mrmovq (%rdi), %r9	# read val from src...
0x053: 50a70800000000000000 | 	mrmovq 8(%rdi),%r10
0x05d: 40960000000000000000 | 	rmmovq %r9, (%rsi)	# ...and store it to dst
0x067: 40a60800000000000000 | 	rmmovq %r10,8(%rsi)
0x071: 6299                 | 	andq %r9, %r9		# val <= 0?
0x073: 718600000000000000   | 	jle test
0x07c: c0f00100000000000000 | 	iaddq $1, %rax
0x086:                      | test:
0x086: 62aa                 | 	andq %r10,%r10
0x088: 719b00000000000000   | 	jle Npos		# if so, goto Npos:
0x091: c0f00100000000000000 | 	iaddq $1, %rax		# count++
0x09b:                      | Npos:	
0x09b: c0f2feffffffffffffff | 	iaddq $-2, %rdx		# len-=2
0x0a5: c0f71000000000000000 | 	iaddq $16, %rdi		# src+=2
0x0af: c0f61000000000000000 | 	iaddq $16, %rsi		# dst+=2 
0x0b9: 6228                 | 	andq %rdx,%r8		# len>1?
0x0bb: 763f00000000000000   | 	jg Loop	
0x0c4: 6222                 | 	andq %rdx,%rdx
0x0c6: 71f800000000000000   | 	jle End		# len > 0?
0x0cf: 50a70800000000000000 | 	mrmovq 8(%rdi),%r10
0x0d9: 40a60800000000000000 | 	rmmovq %r10,8(%rsi)
0x0e3: 62aa                 | 	andq %r10,%r10
0x0e5: 71f800000000000000   | 	jle End
0x0ee: c0f00100000000000000 | 	iaddq $1, %rax
0x0f8:                      | End: 					# if so, goto Loop:
                            | ##################################################################
                            | # Do not modify the following section of code
                            | # Function epilogue.
0x0f8:                      | Done:
0x0f8: 90                   | 	ret
                            | ##################################################################
                            | # Keep the following label at the end of your function
0x0f9:                      | End:
                            | #/* $end ncopy-ys */
0x0f9:                      | EndFun:
                            | 
                            | ###############################
                            | # Source and destination blocks 
                            | ###############################
0x100:                      | 	.align 8
0x100:                      | src:
0x100: 0100000000000000     | 	.quad 1
0x108: 0200000000000000     | 	.quad 2
0x110: 0300000000000000     | 	.quad 3
0x118: 0400000000000000     | 	.quad 4
0x120: 0500000000000000     | 	.quad 5
0x128: faffffffffffffff     | 	.quad -6
0x130: 0700000000000000     | 	.quad 7
0x138: f8ffffffffffffff     | 	.quad -8
0x140: f7ffffffffffffff     | 	.quad -9
0x148: 0a00000000000000     | 	.quad 10
0x150: 0b00000000000000     | 	.quad 11
0x158: f4ffffffffffffff     | 	.quad -12
0x160: 0d00000000000000     | 	.quad 13
0x168: 0e00000000000000     | 	.quad 14
0x170: 0f00000000000000     | 	.quad 15
0x178: f0ffffffffffffff     | 	.quad -16
0x180: efffffffffffffff     | 	.quad -17
0x188: eeffffffffffffff     | 	.quad -18
0x190: 1300000000000000     | 	.quad 19
0x198: 1400000000000000     | 	.quad 20
0x1a0: ebffffffffffffff     | 	.quad -21
0x1a8: 1600000000000000     | 	.quad 22
0x1b0: e9ffffffffffffff     | 	.quad -23
0x1b8: 1800000000000000     | 	.quad 24
0x1c0: e7ffffffffffffff     | 	.quad -25
0x1c8: 1a00000000000000     | 	.quad 26
0x1d0: e5ffffffffffffff     | 	.quad -27
0x1d8: 1c00000000000000     | 	.quad 28
0x1e0: 1d00000000000000     | 	.quad 29
0x1e8: 1e00000000000000     | 	.quad 30
0x1f0: 1f00000000000000     | 	.quad 31
0x1f8: e0ffffffffffffff     | 	.quad -32
0x200: dfffffffffffffff     | 	.quad -33
0x208: 2200000000000000     | 	.quad 34
0x210: ddffffffffffffff     | 	.quad -35
0x218: 2400000000000000     | 	.quad 36
0x220: 2500000000000000     | 	.quad 37
0x228: daffffffffffffff     | 	.quad -38
0x230: d9ffffffffffffff     | 	.quad -39
0x238: 2800000000000000     | 	.quad 40
0x240: 2900000000000000     | 	.quad 41
0x248: d6ffffffffffffff     | 	.quad -42
0x250: d5ffffffffffffff     | 	.quad -43
0x258: d4ffffffffffffff     | 	.quad -44
0x260: 2d00000000000000     | 	.quad 45
0x268: 2e00000000000000     | 	.quad 46
0x270: 2f00000000000000     | 	.quad 47
0x278: d0ffffffffffffff     | 	.quad -48
0x280: cfffffffffffffff     | 	.quad -49
0x288: ceffffffffffffff     | 	.quad -50
0x290: cdffffffffffffff     | 	.quad -51
0x298: ccffffffffffffff     | 	.quad -52
0x2a0: cbffffffffffffff     | 	.quad -53
0x2a8: caffffffffffffff     | 	.quad -54
0x2b0: 3700000000000000     | 	.quad 55
0x2b8: c8ffffffffffffff     | 	.quad -56
0x2c0: c7ffffffffffffff     | 	.quad -57
0x2c8: c6ffffffffffffff     | 	.quad -58
0x2d0: c5ffffffffffffff     | 	.quad -59
0x2d8: 3c00000000000000     | 	.quad 60
0x2e0: 3d00000000000000     | 	.quad 61
0x2e8: c2ffffffffffffff     | 	.quad -62
0x2f0: c1ffffffffffffff     | 	.quad -63
0x2f8: fadebc0000000000     | 	.quad 0xbcdefa # This shouldn't get moved
                            | 
0x300:                      | 	.align 16
0x300:                      | Predest:
0x300: fadebc0000000000     | 	.quad 0xbcdefa
0x308:                      | dest:
0x308: abefcd0000000000     | 	.quad 0xcdefab
0x310: abefcd0000000000     | 	.quad 0xcdefab
0x318: abefcd0000000000     | 	.quad 0xcdefab
0x320: abefcd0000000000     | 	.quad 0xcdefab
0x328: abefcd0000000000     | 	.quad 0xcdefab
0x330: abefcd0000000000     | 	.quad 0xcdefab
0x338: abefcd0000000000     | 	.quad 0xcdefab
0x340: abefcd0000000000     | 	.quad 0xcdefab
0x348: abefcd0000000000     | 	.quad 0xcdefab
0x350: abefcd0000000000     | 	.quad 0xcdefab
0x358: abefcd0000000000     | 	.quad 0xcdefab
0x360: abefcd0000000000     | 	.quad 0xcdefab
0x368: abefcd0000000000     | 	.quad 0xcdefab
0x370: abefcd0000000000     | 	.quad 0xcdefab
0x378: abefcd0000000000     | 	.quad 0xcdefab
0x380: abefcd0000000000     | 	.quad 0xcdefab
0x388: abefcd0000000000     | 	.quad 0xcdefab
0x390: abefcd0000000000     | 	.quad 0xcdefab
0x398: abefcd0000000000     | 	.quad 0xcdefab
0x3a0: abefcd0000000000     | 	.quad 0xcdefab
0x3a8: abefcd0000000000     | 	.quad 0xcdefab
0x3b0: abefcd0000000000     | 	.quad 0xcdefab
0x3b8: abefcd0000000000     | 	.quad 0xcdefab
0x3c0: abefcd0000000000     | 	.quad 0xcdefab
0x3c8: abefcd0000000000     | 	.quad 0xcdefab
0x3d0: abefcd0000000000     | 	.quad 0xcdefab
0x3d8: abefcd0000000000     | 	.quad 0xcdefab
0x3e0: abefcd0000000000     | 	.quad 0xcdefab
0x3e8: abefcd0000000000     | 	.quad 0xcdefab
0x3f0: abefcd0000000000     | 	.quad 0xcdefab
0x3f8: abefcd0000000000     | 	.quad 0xcdefab
0x400: abefcd0000000000     | 	.quad 0xcdefab
0x408: abefcd0000000000     | 	.quad 0xcdefab
0x410: abefcd0000000000     | 	.quad 0xcdefab
0x418: abefcd0000000000     | 	.quad 0xcdefab
0x420: abefcd0000000000     | 	.quad 0xcdefab
0x428: abefcd0000000000     | 	.quad 0xcdefab
0x430: abefcd0000000000     | 	.quad 0xcdefab
0x438: abefcd0000000000     | 	.quad 0xcdefab
0x440: abefcd0000000000     | 	.quad 0xcdefab
0x448: abefcd0000000000     | 	.quad 0xcdefab
0x450: abefcd0000000000     | 	.quad 0xcdefab
0x458: abefcd0000000000     | 	.quad 0xcdefab
0x460: abefcd0000000000     | 	.quad 0xcdefab
0x468: abefcd0000000000     | 	.quad 0xcdefab
0x470: abefcd0000000000     | 	.quad 0xcdefab
0x478: abefcd0000000000     | 	.quad 0xcdefab
0x480: abefcd0000000000     | 	.quad 0xcdefab
0x488: abefcd0000000000     | 	.quad 0xcdefab
0x490: abefcd0000000000     | 	.quad 0xcdefab
0x498: abefcd0000000000     | 	.quad 0xcdefab
0x4a0: abefcd0000000000     | 	.quad 0xcdefab
0x4a8: abefcd0000000000     | 	.quad 0xcdefab
0x4b0: abefcd0000000000     | 	.quad 0xcdefab
0x4b8: abefcd0000000000     | 	.quad 0xcdefab
0x4c0: abefcd0000000000     | 	.quad 0xcdefab
0x4c8: abefcd0000000000     | 	.quad 0xcdefab
0x4d0: abefcd0000000000     | 	.quad 0xcdefab
0x4d8: abefcd0000000000     | 	.quad 0xcdefab
0x4e0: abefcd0000000000     | 	.quad 0xcdefab
0x4e8: abefcd0000000000     | 	.quad 0xcdefab
0x4f0: abefcd0000000000     | 	.quad 0xcdefab
0x4f8: abefcd0000000000     | 	.quad 0xcdefab
0x500:                      | Postdest:
0x500: bcfade0000000000     | 	.quad 0xdefabc
                            | 
0x508:                      | .align 8
                            | # Run time stack
0x508: 0000000000000000     | 	.quad 0
0x510: 0000000000000000     | 	.quad 0
0x518: 0000000000000000     | 	.quad 0
0x520: 0000000000000000     | 	.quad 0
0x528: 0000000000000000     | 	.quad 0
0x530: 0000000000000000     | 	.quad 0
0x538: 0000000000000000     | 	.quad 0
0x540: 0000000000000000     | 	.quad 0
0x548: 0000000000000000     | 	.quad 0
0x550: 0000000000000000     | 	.quad 0
0x558: 0000000000000000     | 	.quad 0
0x560: 0000000000000000     | 	.quad 0
0x568: 0000000000000000     | 	.quad 0
0x570: 0000000000000000     | 	.quad 0
0x578: 0000000000000000     | 	.quad 0
0x580: 0000000000000000     | 	.quad 0
                            | 
0x588:                      | Stack:
